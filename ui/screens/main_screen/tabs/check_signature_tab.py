import traceback

from PyQt5.QtWidgets import QWidget, QVBoxLayout, QLineEdit, QPushButton, QHBoxLayout, QLabel, QFileDialog

import my_crypto.rsa
from logic import account_management


class CheckSignatureTab(QWidget):
    def __init__(self):
        super().__init__()

        # –í–∫–ª–∞–¥–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≠–¶–ü"
        qvbl = QVBoxLayout()

        # –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –≠–¶–ü
        signature_qle = QLineEdit()
        signature_qle.setPlaceholderText("–≠–¶–ü")
        signature_qle.textChanged.connect(self.signature_qle_changed)
        self.signature_qle = signature_qle

        # –§–æ—Ä–º–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
        source_qle = QLineEdit()
        source_qle.setPlaceholderText("input_text.txt")
        source_qle.setReadOnly(True)
        self.source_qle = source_qle
        source_qpb = QPushButton("üìÅ")
        def source_qpb_clicked():
            file_name, _ = QFileDialog.getOpenFileName(self, "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≠–¶–ü", "", "–í—Å–µ —Ñ–∞–π–ª—ã (*)")
            if file_name:
                source_qle.setText(file_name)
        source_qpb.clicked.connect(source_qpb_clicked)
        source_qhbl = QHBoxLayout()
        source_qhbl.addWidget(source_qle)
        source_qhbl.addWidget(source_qpb)

        # –§–æ—Ä–º–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ —Å –ø—É–±–ª–∏—á–Ω—ã–º –∫–ª—é—á–æ–º
        sign_pub_key_qle = QLineEdit()
        sign_pub_key_qle.setPlaceholderText("public.key")
        sign_pub_key_qle.setReadOnly(True)
        self.sign_pub_key_qle = sign_pub_key_qle
        sign_pub_key_qpb = QPushButton("üìÅ")
        def sign_pub_key_qpb_clicked():
            file_name, _ = QFileDialog.getOpenFileName(self, "–í—ã–±—Ä–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –ø—Ä–æ–≤–µ—Ä–∫–∏ –≠–¶–ü", "", "–í—Å–µ —Ñ–∞–π–ª—ã (*)")
            if file_name:
                sign_pub_key_qle.setText(file_name)
        sign_pub_key_qpb.clicked.connect(sign_pub_key_qpb_clicked)
        sign_pub_key_qle.textChanged.connect(self.signature_key_input_changed)
        sign_pub_key_qhbl = QHBoxLayout()
        sign_pub_key_qhbl.addWidget(sign_pub_key_qle)
        sign_pub_key_qhbl.addWidget(sign_pub_key_qpb)

        # –ö–Ω–æ–ø–∫–∞ "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å"
        check_signature_qpb = QPushButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å")
        check_signature_qpb.setEnabled(False)  # –ù–µ–∞–∫—Ç–∏–≤–Ω–∞ –¥–æ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∏ –∫–ª—é—á–∞
        check_signature_qpb.clicked.connect(self.check_signature)
        self.check_signature_qpb = check_signature_qpb
        # –ù–∞–¥–ø–∏—Å—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        status_ql = QLabel("")
        self.status_ql = status_ql

        ### –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        qvbl.addWidget(QLabel("–≠–¶–ü:"))
        qvbl.addWidget(signature_qle)
        qvbl.addWidget(QLabel("–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:"))
        qvbl.addLayout(source_qhbl)
        qvbl.addWidget(QLabel("–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á:"))
        qvbl.addLayout(sign_pub_key_qhbl)
        qvbl.addWidget(check_signature_qpb)
        qvbl.addWidget(status_ql)

        self.setLayout(qvbl)

    def signature_qle_changed(self):
        text = self.signature_qle.text()
        if text.find('\n') != -1:
            self.signature_qle.setText(text.replace('\n', ''))

    def sign_pub_key_qpb_clicked(self):
        file_name, _ = QFileDialog.getOpenFileName(self, "–í—ã–±—Ä–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –ø—Ä–æ–≤–µ—Ä–∫–∏ –≠–¶–ü", "", "–í—Å–µ —Ñ–∞–π–ª—ã (*)")
        if file_name:
            self.sign_pub_key_qle.setText(file_name)

    def signature_key_input_changed(self):
        if (len(self.source_qle.text()) > 0) and (len(self.sign_pub_key_qle.text())) > 0:
            self.check_signature_qpb.setEnabled(True)

    def check_signature(self):
        try:
            signature = int(self.signature_qle.text())
            public_key = my_crypto.rsa.import_rsa_key(self.sign_pub_key_qle.text())
            f = open(self.source_qle.text(), 'r')
            text = f.read()
            message_hash = account_management.stribog_hash(text)
            check = my_crypto.rsa.check_signature(signature, message_hash, public_key)
            if check:
                self.status_ql.setText("–ü–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")
                self.status_ql.setStyleSheet("color: green;")
            else:
                self.status_ql.setText("–ü–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")
                self.status_ql.setStyleSheet("color: red;")
        except Exception as e:
            self.status_ql.setText("–û—à–∏–±–∫–∞. –ü–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")
            self.status_ql.setStyleSheet("color: red;")
            print(e)
            traceback_str = ''.join(traceback.format_tb(e.__traceback__))
            print(traceback_str)

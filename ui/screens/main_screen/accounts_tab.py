from PyQt5.QtWidgets import QWidget, QVBoxLayout, QLineEdit, QPushButton, QLabel, QHBoxLayout

import logic.mfa.totp
from logic import account_management


class AccountsTab(QWidget):
    def __init__(self):
        super().__init__()
        # –í–∫–ª–∞–¥–∫–∞ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"
        layout = QVBoxLayout()
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
        login_qle = QLineEdit()
        login_qle.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω")
        self.login_qle = login_qle
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
        password_qle = QLineEdit()
        password_qle.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
        password_qle.setEchoMode(QLineEdit.Password)  # –°–∫—Ä—ã—Ç–∏–µ –ø–∞—Ä–æ–ª—è
        self.password_qle = password_qle
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ totp secret
        totp_key_qle = QLineEdit()
        totp_key_qle.setPlaceholderText("–ö–ª—é—á –¥–ª—è TOTP (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
        self.totp_key_qle = totp_key_qle
        totp_key_qpb = QPushButton("üîÑ")
        totp_key_qpb.clicked.connect(self.totp_key_qpb_clicked)
        totp_key_qhbl = QHBoxLayout()
        totp_key_qhbl.addWidget(totp_key_qle)
        totp_key_qhbl.addWidget(totp_key_qpb)


        # –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å"
        create_account_qpb = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        create_account_qpb.clicked.connect(self.create_account)  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        # –ú–µ—Ç–∫–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ (—É—Å–ø–µ—Ö/–æ—à–∏–±–∫–∞)
        status_ql = QLabel("")
        self.status_ql = status_ql


        ### –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        layout.addWidget(QLabel("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç"))
        layout.addWidget(login_qle)
        layout.addWidget(password_qle)
        layout.addLayout(totp_key_qhbl)
        layout.addWidget(create_account_qpb)
        layout.addWidget(status_ql)
        self.setLayout(layout)

    def totp_key_qpb_clicked(self):
        self.totp_key_qle.setText(logic.mfa.totp.generate_secret())

    def create_account(self):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            username = self.login_qle.text()
            password = self.password_qle.text()
            totp_secret = self.totp_key_qle.text()
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if account_management.check_credentials(username, password):
                account_management.save_user(username, password, totp_secret)
                self.status_ql.setText("–£—Å–ø–µ—à–Ω–æ")
                self.status_ql.setStyleSheet("color: green;")
            else:
                self.status_ql.setText("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
                self.status_ql.setStyleSheet("color: red;")
        except Exception as e:
            print(e)